name: Build Windows x64 CPU EXE

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
          # lfs: true
          token: ${{ secrets.LLS_CICD }}

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9.13

    - name: Install dependencies
      run: |
        pip install llama-cpp-python==0.2.74 --extra-index-url https://abetlen.github.io/llama-cpp-python/whl/cpu
        pip install -r requirements.txt
        pip install pyinstaller==5.13.2

    - name: Build with PyInstaller
      run: pyinstaller app.spec

    - name: Copy CPU-only default config
      shell: cmd
      run: xcopy .\config_cpuonly .\dist\app\config /E /H /C /I /Y

    - name: Zip the build
      run: Compress-Archive -Path .\dist\app\* -DestinationPath ./LLS-win-x64-cpu-$(Get-Content .\version.txt).zip -Force

    - name: Read version from file
      id: version
      run: |
        echo "VERSION=$(type .\version.txt)" | Out-String -Stream | Set-Content -Path $env:GITHUB_ENV
    
    - name: Generate tag name
      shell: cmd
      run: |
        for /f "tokens=1-4 delims=/- " %%a in ('date /t') do (
          set month=%%a
          set day=%%b
          set year=%%c
        )
        for /f "tokens=1-2 delims=: " %%a in ('time /t') do (
          set hour=%%a
          set minute=%%b
        )
        if "%hour:~0,1%" == " " set hour=0%hour:~1,1%
        if "%minute:~0,1%" == " " set minute=0%minute:~1,1%
        set second=%time:~6,2%
        set TAG_VERSION=%year%%month%%day%%hour%%minute%%second%
        echo TAG_VERSION=%TAG_VERSION%>> %GITHUB_ENV%

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.LLS_CICD }}
      with:
        tag_name: win-x64-cpu-${{ env.TAG_VERSION }}
        release_name: Release of LLS-win-x64-cpu-${{ env.VERSION }}
        body: Release of LLS-win-x64-cpu-${{ env.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.LLS_CICD }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./LLS-win-x64-cpu-${{ env.VERSION }}.zip
        asset_name: LLS-win-x64-cpu-${{ env.VERSION }}.zip
        asset_content_type: application/zip
